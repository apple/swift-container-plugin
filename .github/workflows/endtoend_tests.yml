name: End to end tests

on:
    workflow_call:
#        inputs:
#            example:
#                required: true
#                type: string

jobs:
    endtoend-tests:
        name: End to end tests
        runs-on: ubuntu-latest
        services:
            registry:
                image: registry:2
                ports:
                    - 5000:5000
        strategy:
            matrix:
                example:
                    - Examples/HelloWorldVapor
                    - Examples/HelloWorldHummingbird
                    - Examples/HelloWorldWithResources
        steps:
            - name: Checkout repository
              uses: actions/checkout@v4
              with:
                  persist-credentials: false

            - name: Mark the workspace as safe
              # https://github.com/actions/checkout/issues/766
              run: git config --global --add safe.directory ${GITHUB_WORKSPACE}

            - name: Install the static SDK
              run: |
                  swift sdk install \
                      https://download.swift.org/swift-6.1-release/static-sdk/swift-6.1-RELEASE/swift-6.1-RELEASE_static-linux-0.0.1.artifactbundle.tar.gz \
                      --checksum 111c6f7d280a651208b8c74c0521dd99365d785c1976a6e23162f55f65379ac6

            - name: Build the example
              run: |
                  sed -i'.bak' -e "/swift-container-plugin/ s@(url:.*),@(path: \"$PWD\"),@" ${{ matrix.example }}/Package.swift   # Use plugin from this checkout
                  cat ${{ matrix.example }}/Package.swift
                  swift package \
                      --package-path ${{ matrix.example }} \
                      --swift-sdk x86_64-swift-linux-musl \
                      --allow-network-connections all \
                      build-container-image \
                      --repository localhost:5000/example \
                      --from scratch

            - name: Run the example
              run: |
                  docker run -d --platform linux/amd64 -p 8080:8080 localhost:5000/example

            - name: Check that the service is running
              run: |
                  # The curious combination of --verbose and --silent causes
                  # curl to print the request and response (--verbose) but not
                  # the transmission progress messages (--silent).
                  #
                  # --fail-with-body causes curl to exit with a nonzero exit code
                  # if the HTTP response code is >= 400.   Without this flag, curl
                  # only returns a nonzero exit code if something went wrong while
                  # connecting to the server - a successful HTTP transaction which
                  # indicates a server error is still considered to be a successful
                  # transaction from the client's point of view.
                  curl --verbose --silent --output /dev/null --fail-with-body localhost:8080
